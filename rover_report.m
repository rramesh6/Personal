function rover_stack = rover_report(subject)

warning('off','all');

% start by defining the files to be read, which are all the excel reports
% detailing gait periods generated by the Rover device 

if contains(subject,'RCS_02')
    path = '/Volumes/dwang3_shared/Patient Data/RC+S Data/gait_RCS_02/Rover/Rover Excel Reports';
end

if contains(subject,'RCS_05')
    path = '/Volumes/dwang3_shared/Patient Data/RC+S Data/gait_RCS_05/Rover/Rover Excel Reports';
end

if contains(subject,'RCS_04')
    path = '/Volumes/dwang3_shared/Patient Data/RC+S Data/gait_RCS_04/Rover/Rover Excel Reports';
end

files = dir(fullfile(path,'*.xlsx'));
names = {files.name};
addpath(path)

% create empty matrix rover_stack to store all the info from these reports

rover_stack = [];

% cycle through all the excel reports and import all the data from these
% reports into rover_stack

for i = 1:length(names)

    fname = names{i}
    sheets = sheetnames(fname);

    if sum(contains(sheets,'Left Leg')) == 0
        continue
    end

    % convert all columns of the data set to appropriate data types,
    % starting with the left leg information

    df_left = readtable(fname,'Sheet', 'Left Leg Stride List','ReadVariableNames', true);
    df_left= removevars(df_left,{'x_'});
    df_left.Fname = repmat({fname},size(df_left,1),1);
    df_left.LeftRight = repmat({'Left'},size(df_left,1),1);
    df_left.Time = datetime(df_left.Time, 'InputFormat', 'MM/dd/yy - HH:mm:ss');
    df_left.GaitCycleTime_s_ = regexprep(df_left.GaitCycleTime_s_, ' s', '');
    df_left.GaitCycleTime_s_ = str2double(df_left.GaitCycleTime_s_);
    df_left.GaitCycleTime_s_ = seconds(df_left.GaitCycleTime_s_);
    df_left.Length_cm_ = regexprep(df_left.Length_cm_, ' cm', '');
    df_left.Length_cm_ = str2double(df_left.Length_cm_);
    df_left.SwingPeriod_s_ = regexprep(df_left.SwingPeriod_s_, ' s', '');
    df_left.SwingPeriod_s_ = str2double(df_left.SwingPeriod_s_);
    df_left.SwingPeriod_s_ = seconds(df_left.SwingPeriod_s_);
    df_left.Heading___ = regexprep(df_left.Heading___, ' °', '');
    df_left.Heading___ = str2double(df_left.Heading___);
    df_left.Used = strcmp(df_left.Used, 'Yes');
    df_left.Fname = string(df_left.Fname);
    df_left.LeftRight = string(df_left.LeftRight);
    df_left.End = df_left.Time + df_left.GaitCycleTime_s_;
    
    % now, convert all the right leg information similarly

    df_right = readtable(fname, 'Sheet', 'Right Leg Stride List', 'ReadVariableNames', true);
    df_right= removevars(df_right,{'x_'});
    df_right.Fname = repmat({fname},size(df_right,1),1);
    df_right.LeftRight = repmat({'right'},size(df_right,1),1);
    df_right.Time = datetime(df_right.Time, 'InputFormat', 'MM/dd/yy - HH:mm:ss');
    df_right.GaitCycleTime_s_ = regexprep(df_right.GaitCycleTime_s_, ' s', '');
    df_right.GaitCycleTime_s_ = str2double(df_right.GaitCycleTime_s_);
    df_right.GaitCycleTime_s_ = seconds(df_right.GaitCycleTime_s_);
    df_right.Length_cm_ = regexprep(df_right.Length_cm_, ' cm', '');
    df_right.Length_cm_ = str2double(df_right.Length_cm_);
    df_right.SwingPeriod_s_ = regexprep(df_right.SwingPeriod_s_, ' s', '');
    df_right.SwingPeriod_s_ = str2double(df_right.SwingPeriod_s_);
    df_right.SwingPeriod_s_ = seconds(df_right.SwingPeriod_s_);
    df_right.Heading___ = regexprep(df_right.Heading___, ' °', '');
    df_right.Heading___ = str2double(df_right.Heading___);
    df_right.Used = strcmp(df_right.Used, 'Yes');
    df_right.Fname = string(df_right.Fname);
    df_right.LeftRight = string(df_right.LeftRight);
    df_right.End = df_right.Time + df_right.GaitCycleTime_s_;

    % import the left and right leg info into rover_stack

    rover_stack = [rover_stack; df_left; df_right];
end

% clean up the final output rover_stack with appropriate variable names

rover_stack.Properties.VariableNames = {'Time','GaitCycleTime','Length','SwingPeriod','Heading','Used','Fname','LeftRight','End'};

% add a column in rover_stack with the dates for each data entry 

rover_stack.Date = datestr(rover_stack.Time, 'mm/dd/yy');
rover_stack.Date = string(rover_stack.Date);
